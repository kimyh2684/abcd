<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model 
	-->
	<mvc:annotation-driven />
	<context:component-scan base-package="com.kosmo.career.**"/>
	
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/build/**" location="/build/" />
	<mvc:resources mapping="/vendors/**" location="/vendors/" />
	<mvc:resources mapping="/view/css/**" location="/view/css/" />
	<mvc:resources mapping="/view/js/**" location="/view/js/" />
	<mvc:resources mapping="/view/images/**" location="/view/images/" />
	
	<!-- datasource --> 
	<bean id="dataSourceSpied" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> 
	    <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
	    <property name="url" value="jdbc:oracle:thin:@192.168.0.178:1521:xe" />
	    <property name="username" value="kosmo" />
	    <property name="password"  value="1234" /> 
	</bean>
	
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
        <constructor-arg ref="dataSourceSpied" />
        <property name="logFormatter">
            <bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
                <property name="loggingType" value="MULTI_LINE" />
                <property name="sqlPrefix" value="SQL         :  "/>
            </bean>
        </property>
    </bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />   
		<property name="typeAliasesPackage" value="com.cosmo.career.vo" />
		<property name="mapperLocations" value="classpath:mappers/*Map.xml" />
		<property name="configLocation" value="classpath:mybatis-context.xml" />
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	 	<property name="basePackage" value="com.kosmo.career.mapper" />
	 	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	 </bean>
	
	<!-- Tx Manager -->
	
	<bean id="myTxManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="myTxManager">
		<tx:attributes>
<!-- 			<tx:method name="*NO" no-rollback-for="Exception"/>-->			
 			<tx:method name="*Insert" rollback-for="Exception"/>
			<tx:method name="*Delete" rollback-for="Exception"/>
			<tx:method name="*Update" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="cut" expression="execution(* com.kosmo.career.service.*Impl.*(..))"  /> 
		<aop:advisor pointcut-ref="cut" advice-ref="txAdvice" />
	</aop:config>
	
	<!-- Tiles -->
	<bean id = "tilesConfigurer" class = "org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- tiles view resolver --> 
	<bean id = "tilesViewResolver" class="org.springframework.web.servlet.view.tiles2.TilesViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView" />
		<property name="order" value="1" />
  	</bean>
		 
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/view/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="2" />
	</bean>
	
	<!-- 
	<bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/" />
        <property name="suffix" value=".jsp" />
    </bean>
     -->
     
  	<!-- file upload view resolver -->
     <bean id = "multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
         <property name="defaultEncoding" value="UTF-8" />
         <property name="maxUploadSize" value="2000000" />
         <property name="uploadTempDir" value="/uploads" />
     </bean>
     <bean id="uploadDirResource" class="org.springframework.core.io.FileSystemResource">
        <constructor-arg>
            <value>C:/upload/</value>
        </constructor-arg>
    </bean>
	
</beans>
